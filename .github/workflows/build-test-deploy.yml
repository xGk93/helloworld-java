name: Build Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_VERSION: 1.0.0

jobs:
  build:
    name: Build and Cache Dependencies
    runs-on: ubuntu-latest

    steps:
      - run: echo Avant && ls -a
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - run: echo Apres && ls -a

      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          java-version: 17
          distribution: temurin

      - name: Caching maven dependencies
        uses: actions/cache@v4.1.2
        with:
          path: ${{ github.workspace }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project with Maven
        run: mvn clean package -DskipTests
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: helloworld-{{ env.PROJECT_VERSION }}.jar
          path: target/helloworld-1.0-SNAPSHOT.jar
          
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          java-version: 17
          distribution: temurin

      - name: Caching maven dependencies
        uses: actions/cache@v4.1.2
        with:
          path: ${{ github.workspace }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Test with Maven
        run: mvn test
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"

